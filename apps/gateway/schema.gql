# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type WorkspaceGQLEntityType {
  id: ID!
  name: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  services: [String!]!
  subdomain: String!
  reference: String!
  stripe_account_verified: Boolean!
  stripe_account_disabled: Boolean!
  stripe_account_disable_reason: String
  memberships: [MembershipGQLEntityType!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MembershipGQLEntityType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  roles: [String!]!
  user: UserGQLEntityType
  workspace: WorkspaceGQLEntityType
  userId: String
  workspaceId: String
}

type UserGQLEntityType {
  id: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  country: String!
  stripeCustomerId: String
  hasVerifiedIdentity: Boolean!
  isOnboarded: Boolean!
  memberships: [MembershipGQLEntityType!]
}

type StripeAccountResponseGQLEntityType {
  created: Int!
  expires_at: Int!
  url: String!
}

type AuthenticationResponseGQLEntityType {
  access_token: String!
  user: UserGQLEntityType!
}

type PricingFeeGQLEntityType {
  id: ID!
  description: String!
  total: Float!
  name: String!
}

type CategoryGQLEntityType {
  id: ID!
  name: String!
  description: String!
  slug: String!
  published: Boolean!
  creator: UserGQLEntityType!
  workspace: WorkspaceGQLEntityType!
  products: [ProductGQLEntityType!]!
}

type ProductGQLEntityType {
  id: ID!
  name: String!
  description: String!
  published: Boolean!
  pricings: [PricingGQLEntityType!]
}

type PricingGQLEntityType {
  id: ID!
  amount: Float!
  chargeType: ChargeType!
  packageType: PackageType!
  product: ProductGQLEntityType
  fees: [PricingFeeGQLEntityType!]
}

enum ChargeType {
  ONE_TIME
  RECURRING
}

enum PackageType {
  FLAT
  PACKAGE
}

type StoragePresignedURLGQLEntityType {
  partNumber: Int!
  presignedUrl: String!
}

type StorageInitializationResponseGQLEntityType {
  uploadId: String!
  key: String!
  presignedUrls: [StoragePresignedURLGQLEntityType!]!
}

type StorageCompleteResponseGQLEntityType {
  location: String!
  key: String!
  bucket: String!
}

type SignedImageResponseGQLEntityType {
  url: String!
  key: String!
  expiresAt: String!
}

type Query {
  me: UserGQLEntityType!
  findWorkspaces: [WorkspaceGQLEntityType!]!
  categories: [CategoryGQLEntityType!]!
}

type Mutation {
  createUser(input: CreateUserGQLInput!): AuthenticationResponseGQLEntityType!
  loginUser(input: AuthenticationGQLInput!): AuthenticationResponseGQLEntityType!
  createWorkspace(input: CreateWorkspaceGQLInput!): WorkspaceGQLEntityType!
  createAccountLink: StripeAccountResponseGQLEntityType!
  createPricing(input: PricingCreateGQLInput!): PricingGQLEntityType!
  createFee(input: PricingFeeCreateGQLInput!): PricingFeeGQLEntityType!
  createProduct(input: ProductCreateGQLInput!): ProductGQLEntityType!
  createCategory(input: CategoryCreateGQLInput!): CategoryGQLEntityType!
  initializeMultipartUpload(input: CreateFileGQLInput!): StorageInitializationResponseGQLEntityType!
  completeMultipartUpload(input: CompleteUploadGQLInput!): StorageCompleteResponseGQLEntityType!
  getSignedImage(input: SignedImageGQLInput!): SignedImageResponseGQLEntityType!
  abortMultipartUpload(input: AbortUploadGQLInput!): Boolean!
}

input CreateUserGQLInput {
  username: String!
  password: String!
  country: String!
}

input AuthenticationGQLInput {
  username: String!
  password: String!
}

input CreateWorkspaceGQLInput {
  name: String!
  description: String!
  country: String!
  services: [String!]!
}

input PricingCreateGQLInput {
  amount: Float!
  chargeType: ChargeType! = ONE_TIME
  packageType: PackageType! = FLAT
}

input PricingFeeCreateGQLInput {
  description: String!
  total: Float! = 0
  name: String!
}

input ProductCreateGQLInput {
  name: String!
  description: String!
  productImage: String
  productPricingId: String!
  productPricingTaxId: String!
  published: Boolean! = false
}

input CategoryCreateGQLInput {
  name: String!
  description: String!
  published: Boolean! = false
}

input CreateFileGQLInput {
  fileName: String!
  fileType: String!
  totalParts: Int!
  fileSize: Int!
}

input CompleteUploadGQLInput {
  key: String!
  uploadId: String!
  parts: [CompleteUploadPartsGQLInput!]!
}

input CompleteUploadPartsGQLInput {
  partNumber: Int!
  etag: String!
}

input SignedImageGQLInput {
  key: String!
  expiresIn: Int
}

input AbortUploadGQLInput {
  key: String!
  uploadId: String!
}